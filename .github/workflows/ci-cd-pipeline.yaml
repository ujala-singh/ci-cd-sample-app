name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Step 2: Set up Node.js environment for testing
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    # Step 3: Get branch name
    - name: Get branch name
      if: startsWith(github.ref, 'refs/heads')
      run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      id: get_branch
    
    # Step 4: Get commit id
    - name: Get commit id
      run: echo "version=$(echo `git ls-remote https://${{ secrets.MY_PAT }}@github.com/ujala-singh/ci-cd-sample-app.git ${{ steps.get_branch.outputs.branch }} | awk '{ print $1}' | cut -c1-7`)" >> $GITHUB_OUTPUT
      id: get_version

    # Step 5: Set up Buildx
    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build and push app docker image to Docker Hub
    - name: Build and push app docker image
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.USERNAME }}/${{ github.event.repository.name }}:${{ steps.get_branch.outputs.branch }}-${{ steps.get_version.outputs.version }}
          ${{ env.USERNAME }}/${{ github.event.repository.name }}:${{ steps.get_branch.outputs.branch }}-latest
      env:
        DOCKER_CLIENT_TIMEOUT: 300
        COMPOSE_HTTP_TIMEOUT: 300
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
